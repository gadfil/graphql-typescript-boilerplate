{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///external \"graphql\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { GraphQLSchema, parse, execute } from 'graphql';\nimport { PluginFunction, PluginValidateFn, DocumentFile } from 'graphql-codegen-core';\nimport { extname } from 'path';\n\ninterface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes:\n        | {\n            name: string;\n          }[]\n        | null;\n    }[];\n  };\n}\n\nexport interface FragmentMatcherConfig {\n  module?: 'commonjs' | 'es2015';\n}\n\nconst extensions = {\n  ts: ['.ts', '.tsx'],\n  js: ['.js', '.jsx'],\n  json: ['.json']\n};\n\nexport const plugin: PluginFunction = async (\n  schema: GraphQLSchema,\n  _documents,\n  pluginConfig: FragmentMatcherConfig,\n  info\n): Promise<string> => {\n  const config: Required<FragmentMatcherConfig> = {\n    module: 'es2015',\n    ...pluginConfig\n  };\n\n  const introspection = await execute<IntrospectionResultData>({\n    schema,\n    document: parse(`\n      {\n        __schema {\n          types {\n            kind\n            name\n            possibleTypes {\n              name\n            }\n          }\n        }\n      }\n    `)\n  });\n  const ext = extname(info.outputFile).toLowerCase();\n\n  if (!introspection.data) {\n    throw new Error(`Plugin \"fragment-matcher\" couldn't introspect the schema`);\n  }\n\n  const filteredData: IntrospectionResultData = {\n    __schema: {\n      ...introspection.data.__schema,\n      types: introspection.data.__schema.types.filter(type => type.kind === 'UNION' || type.kind === 'INTERFACE')\n    }\n  };\n  const content = JSON.stringify(filteredData, null, 2);\n\n  if (extensions.json.includes(ext)) {\n    return content;\n  }\n\n  if (extensions.js.includes(ext)) {\n    const defaultExportStatement = config.module === 'es2015' ? `export default` : 'module.exports =';\n\n    return `\n      ${defaultExportStatement} ${content}\n    `;\n  }\n\n  if (extensions.ts.includes(ext)) {\n    return `\n      export interface IntrospectionResultData {\n        __schema: {\n          types: {\n            kind: string;\n            name: string;\n            possibleTypes: {\n              name: string;\n            }[];\n          }[];\n        };\n      }\n\n      const result: IntrospectionResultData = ${content};\n\n      export default result;\n    `;\n  }\n\n  throw new Error(`Extension ${ext} is not supported`);\n};\n\nexport const validate: PluginValidateFn<any> = async (\n  _schema: GraphQLSchema,\n  _documents: DocumentFile[],\n  config: FragmentMatcherConfig,\n  outputFile: string\n) => {\n  const ext = extname(outputFile).toLowerCase();\n  const all = Object.values(extensions).reduce((acc, exts) => [...acc, ...exts], []);\n\n  if (!all.includes(ext)) {\n    throw new Error(\n      `Plugin \"fragment-matcher\" requires extension to be one of ${all.map(val => val.replace('.', '')).join(', ')}!`\n    );\n  }\n\n  if (config.module === 'commonjs' && extensions.ts.includes(ext)) {\n    throw new Error(`Plugin \"fragment-matcher\" doesn't support commonjs modules combined with TypeScript!`);\n  }\n};\n","module.exports = require(\"graphql\");","module.exports = require(\"path\");"],"sourceRoot":""}