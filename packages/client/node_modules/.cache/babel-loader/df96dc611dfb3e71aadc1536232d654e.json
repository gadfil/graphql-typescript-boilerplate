{"ast":null,"code":"import _classCallCheck from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/components/User.tsx\";\nimport React, { Component } from 'react';\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User() {\n    _classCallCheck(this, User);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(User).apply(this, arguments));\n  }\n\n  _createClass(User, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"User: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, JSON.stringify(this.props)));\n    }\n  }]);\n\n  return User;\n}(Component); // export const UserQuery = gql-demo`\n//   qu-ery User($id: Int!) {\n//     user(id: $id) {\n//       name\n//       friends {\n//         friends {\n//           friends {\n//             friends {\n//               name\n//               ip\n//             }\n//           }\n//         }\n//       }\n//       articles {\n//         ...ArticlePageArticle\n//       }\n//     }\n//   }\n//   ${ArticlePage.fragments.article}\n// `;\n// export default () => <MyQuery component={User} query={UserQuery} variables={{ id: 123 }} />;\n\n\nexport default (function () {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"user data mock\");\n});","map":{"version":3,"sources":["/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/components/User.tsx"],"names":["React","Component","User","JSON","stringify","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAQMC,I;;;;;;;;;;;;;6BACY;AACd,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,CAAJ,CAFF,CADF;AAMD;;;;EARgBJ,S,GAWnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,gBAAe;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN;AAAA,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport MyQuery from './MyQuery';\n// import ArticlePage from './ArticlePage';\n\ninterface UserProps {\n  data: any;\n}\nclass User extends Component<UserProps> {\n  public render() {\n    return (\n      <div>\n        <h1>User: </h1>\n        <p>{JSON.stringify(this.props)}</p>\n      </div>\n    );\n  }\n}\n\n// export const UserQuery = gql-demo`\n//   qu-ery User($id: Int!) {\n//     user(id: $id) {\n//       name\n//       friends {\n//         friends {\n//           friends {\n//             friends {\n//               name\n//               ip\n//             }\n//           }\n//         }\n//       }\n//       articles {\n//         ...ArticlePageArticle\n//       }\n//     }\n//   }\n//   ${ArticlePage.fragments.article}\n// `;\n\n// export default () => <MyQuery component={User} query={UserQuery} variables={{ id: 123 }} />;\n\nexport default () => <div>user data mock</div>;\n"]},"metadata":{},"sourceType":"module"}