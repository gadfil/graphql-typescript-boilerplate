{"ast":null,"code":"import _regeneratorRuntime from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _createClass from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/auth/AuthLoginForm.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          mutation AuthLoginFormMutation($login: String!, $password: String!) {\\n            login(login: $login, password: $password) {\\n              query {\\n                ...AuthUserDataFragment\\n              }\\n            }\\n          }\\n          \", \"\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { withApollo, Mutation } from 'react-apollo';\nimport { Form as RFForm, Field as RFField } from 'react-final-form';\nimport AuthUserDataFragment from './AuthUserDataFragment';\nimport { Button, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\nimport gql from 'graphql-tag';\n\nvar TypedMutation =\n/*#__PURE__*/\nfunction (_Mutation) {\n  _inherits(TypedMutation, _Mutation);\n\n  function TypedMutation() {\n    _classCallCheck(this, TypedMutation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TypedMutation).apply(this, arguments));\n  }\n\n  return TypedMutation;\n}(Mutation);\n\nvar AuthLoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthLoginForm, _Component);\n\n  function AuthLoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AuthLoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AuthLoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.submit = function (values, form) {\n      console.log(values, form);\n    };\n\n    return _this;\n  }\n\n  _createClass(AuthLoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TypedMutation, {\n        mutation: gql(_templateObject(), AuthUserDataFragment),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, function (submitMutation, _ref) {\n        var client = _ref.client;\n        return React.createElement(RFForm, {\n          initialValues: {\n            login: 'admin',\n            password: ''\n          },\n          onSubmit:\n          /*#__PURE__*/\n          function () {\n            var _ref2 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(values) {\n              var result;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return submitMutation({\n                        variables: {\n                          login: values.login,\n                          password: values.password\n                        }\n                      });\n\n                    case 2:\n                      result = _context.sent;\n\n                      if (result && result.data && result.data.login && result.data.login.token) {\n                        client.resetStore();\n                      } else {\n                        alert('Incorrect password');\n                      }\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          subscription: {\n            submitting: true,\n            pristine: true\n          },\n          render: function render(_ref3) {\n            var handleSubmit = _ref3.handleSubmit;\n            return React.createElement(\"div\", {\n              style: {\n                maxWidth: '400px',\n                margin: '0 auto'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(FormGroup, {\n              controlId: \"email\",\n              bsSize: \"large\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, React.createElement(ControlLabel, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, \"Login\"), React.createElement(RFField, {\n              name: \"login\",\n              validate: function validate(v) {\n                return !v ? 'Required' : undefined;\n              },\n              render: function render(_ref4) {\n                var input = _ref4.input,\n                    meta = _ref4.meta;\n                return React.createElement(FormControl, Object.assign({}, input, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 66\n                  },\n                  __self: this\n                }));\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            })), React.createElement(FormGroup, {\n              controlId: \"password\",\n              bsSize: \"large\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }, React.createElement(ControlLabel, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, \"Password\"), React.createElement(RFField, {\n              name: \"password\" // validate={v => (!v ? 'Please enter password' : undefined)}\n              ,\n              render: function render(_ref5) {\n                var input = _ref5.input,\n                    meta = _ref5.meta;\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 75\n                  },\n                  __self: this\n                }, React.createElement(FormControl, Object.assign({\n                  type: \"password\"\n                }, input, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 76\n                  },\n                  __self: this\n                })), meta.error && meta.touched && React.createElement(\"h2\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 77\n                  },\n                  __self: this\n                }, meta.error));\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            })), React.createElement(Button, {\n              block: true,\n              bsSize: \"large\",\n              onClick: handleSubmit,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, \"Login\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return AuthLoginForm;\n}(Component);\n\nexport default withApollo(AuthLoginForm);","map":{"version":3,"sources":["/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/auth/AuthLoginForm.tsx"],"names":["React","Component","withApollo","Mutation","Form","RFForm","Field","RFField","AuthUserDataFragment","Button","FormGroup","FormControl","ControlLabel","gql","TypedMutation","AuthLoginForm","submit","values","form","console","log","submitMutation","client","login","password","variables","result","data","token","resetStore","alert","submitting","pristine","handleSubmit","maxWidth","margin","v","undefined","input","meta","error","touched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withApollo, Mutation } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { Form as RFForm, Field as RFField } from 'react-final-form';\nimport AuthUserDataFragment from './AuthUserDataFragment';\nimport {\n  AuthLoginFormMutation,\n  AuthLoginFormMutationVariables,\n} from './__generated__/AuthLoginFormMutation';\n\nimport { Button, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\nimport gql from 'graphql-tag';\n\ninterface Props {\n  client: ApolloClient<any>;\n}\n\nclass TypedMutation extends Mutation<AuthLoginFormMutation, AuthLoginFormMutationVariables> {}\n\nclass AuthLoginForm extends Component<Props> {\n  public submit = (values: any, form: any): any => {\n    console.log(values, form);\n  };\n\n  public render() {\n    return (\n      <TypedMutation\n        mutation={gql`\n          mutation AuthLoginFormMutation($login: String!, $password: String!) {\n            login(login: $login, password: $password) {\n              query {\n                ...AuthUserDataFragment\n              }\n            }\n          }\n          ${AuthUserDataFragment}\n        `}\n      >\n        {(submitMutation, { client }) => (\n          <RFForm\n            initialValues={{ login: 'admin', password: '' }}\n            onSubmit={async (values: any) => {\n              const result: any = await submitMutation({\n                variables: {\n                  login: values.login,\n                  password: values.password,\n                },\n              });\n              if (result && result.data && result.data.login && result.data.login.token) {\n                client.resetStore();\n              } else {\n                alert('Incorrect password');\n              }\n            }}\n            subscription={{\n              submitting: true,\n              pristine: true,\n            }}\n            render={({ handleSubmit }) => (\n              <div style={{ maxWidth: '400px', margin: '0 auto' }}>\n                <FormGroup controlId=\"email\" bsSize=\"large\">\n                  <ControlLabel>Login</ControlLabel>\n                  <RFField\n                    name=\"login\"\n                    validate={v => (!v ? 'Required' : undefined)}\n                    render={({ input, meta }) => <FormControl {...input} />}\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                  <ControlLabel>Password</ControlLabel>\n                  <RFField\n                    name=\"password\"\n                    // validate={v => (!v ? 'Please enter password' : undefined)}\n                    render={({ input, meta }) => (\n                      <div>\n                        <FormControl type=\"password\" {...input} />\n                        {meta.error && meta.touched && <h2>{meta.error}</h2>}\n                      </div>\n                    )}\n                  />\n                </FormGroup>\n                <Button block bsSize=\"large\" onClick={handleSubmit as any}>\n                  Login\n                </Button>\n              </div>\n            )}\n          />\n        )}\n      </TypedMutation>\n    );\n  }\n}\n\nexport default withApollo<{}>(AuthLoginForm);\n"]},"metadata":{},"sourceType":"module"}