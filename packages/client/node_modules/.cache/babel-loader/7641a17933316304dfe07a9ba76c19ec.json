{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/auth/AuthMenu.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        query AuthMenuQuery {\\n          ...AuthUserDataFragment\\n        }\\n        \", \"\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport AuthLogoutButton from './AuthLogoutButton';\nimport AuthLoginLink from './AuthLoginLink';\nimport AuthUserDataFragment from './AuthUserDataFragment';\n\nvar AuthGetCurrentUserQuery =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(AuthGetCurrentUserQuery, _Query);\n\n  function AuthGetCurrentUserQuery() {\n    _classCallCheck(this, AuthGetCurrentUserQuery);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AuthGetCurrentUserQuery).apply(this, arguments));\n  }\n\n  return AuthGetCurrentUserQuery;\n}(Query);\n\nexport default function AuthMenu() {\n  return React.createElement(AuthGetCurrentUserQuery, {\n    query: gql(_templateObject(), AuthUserDataFragment),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n    if (loading) return '...';\n    if (error) return \"Error! \".concat(error.message); // if user exists\n\n    if (data && data.me && data.me.user && data.me.user.login) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, data.me.user.login, \" (\", data.me.user.name, \")\"), ' ', React.createElement(AuthLogoutButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(AuthLoginLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  });\n}","map":{"version":3,"sources":["/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/auth/AuthMenu.tsx"],"names":["React","gql","Query","AuthLogoutButton","AuthLoginLink","AuthUserDataFragment","AuthGetCurrentUserQuery","AuthMenu","loading","error","data","message","me","user","login","name"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAyBC,KAAzB,QAAsC,cAAtC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;;IAEMC,uB;;;;;;;;;;;;EAAgCJ,K;;AAEtC,eAAe,SAASK,QAAT,GAAoB;AACjC,SACE,oBAAC,uBAAD;AACE,IAAA,KAAK,EAAEN,GAAF,oBAIDI,oBAJC,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,gBAA8B;AAAA,QAA3BG,OAA2B,QAA3BA,OAA2B;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC7B,QAAIF,OAAJ,EAAa,OAAO,KAAP;AACb,QAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB,EAFkB,CAI7B;;AACA,QAAID,IAAI,IAAIA,IAAI,CAACE,EAAb,IAAmBF,IAAI,CAACE,EAAL,CAAQC,IAA3B,IAAmCH,IAAI,CAACE,EAAL,CAAQC,IAAR,CAAaC,KAApD,EAA2D;AACzD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACE,EAAL,CAAQC,IAAR,CAAaC,KADhB,QAC0BJ,IAAI,CAACE,EAAL,CAAQC,IAAT,CAAsBE,IAD/C,MADF,EAGO,GAHP,EAIE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;AAED,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAzBH,CADF;AA6BD","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { ApolloConsumer, Query } from 'react-apollo';\nimport client from '../apolloClient';\nimport AuthLogoutButton from './AuthLogoutButton';\nimport AuthLoginLink from './AuthLoginLink';\nimport { AuthMenuQuery } from './__generated__/AuthMenuQuery';\nimport AuthUserDataFragment from './AuthUserDataFragment';\n\nclass AuthGetCurrentUserQuery extends Query<AuthMenuQuery, {}> {}\n\nexport default function AuthMenu() {\n  return (\n    <AuthGetCurrentUserQuery\n      query={gql`\n        query AuthMenuQuery {\n          ...AuthUserDataFragment\n        }\n        ${AuthUserDataFragment}\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return '...';\n        if (error) return `Error! ${error.message}`;\n\n        // if user exists\n        if (data && data.me && data.me.user && data.me.user.login) {\n          return (\n            <span>\n              <b>\n                {data.me.user.login} ({(data.me.user as any).name})\n              </b>{' '}\n              <AuthLogoutButton />\n            </span>\n          );\n        }\n\n        return <AuthLoginLink />;\n      }}\n    </AuthGetCurrentUserQuery>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}