{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/components/Hello.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query Hello {\\n    hello\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport MyQuery from './MyQuery';\n\nvar Hello =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Hello, _Component);\n\n  function Hello() {\n    _classCallCheck(this, Hello);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Hello).apply(this, arguments));\n  }\n\n  _createClass(Hello, [{\n    key: \"render\",\n    value: function render() {\n      console.log('Hello component is render  ');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Hello\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, JSON.stringify(this.props)));\n    }\n  }]);\n\n  return Hello;\n}(Component);\n\nexport var HelloQuery = gql(_templateObject());\nexport default (function () {\n  return React.createElement(MyQuery, {\n    fetchPolicy: \"network-only\",\n    component: Hello,\n    query: HelloQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/components/Hello.tsx"],"names":["React","Component","gql","MyQuery","Hello","console","log","JSON","stringify","props","HelloQuery"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,K;;;;;;;;;;;;;6BACY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,CAAJ,CAFF,CADF;AAMD;;;;EAViBR,S;;AAapB,OAAO,IAAMS,UAAU,GAAGR,GAAH,mBAAhB;AAMP,gBAAe;AAAA,SAAM,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,cAArB;AAAoC,IAAA,SAAS,EAAEE,KAA/C;AAAsD,IAAA,KAAK,EAAEM,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport MyQuery from './MyQuery';\n\nclass Hello extends Component {\n  public render() {\n    console.log('Hello component is render  ');\n\n    return (\n      <div>\n        <h1>Hello</h1>\n        <p>{JSON.stringify(this.props)}</p>\n      </div>\n    );\n  }\n}\n\nexport const HelloQuery = gql`\n  query Hello {\n    hello\n  }\n`;\n\nexport default () => <MyQuery fetchPolicy=\"network-only\" component={Hello} query={HelloQuery} />;\n"]},"metadata":{},"sourceType":"module"}