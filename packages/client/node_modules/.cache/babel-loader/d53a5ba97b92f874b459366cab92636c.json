{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/orders/OrderList.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    fragment OrderListFragment on OrderPagination {\\n      items {\\n        ...OrderListItemFragment\\n      }\\n      pageInfo {\\n        totalItems\\n        ...PaginationFragment\\n      }\\n    }\\n    \", \"\\n    \", \"\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react'; // import { createPaginationContainer, graphql } from 'react-relay';\n\nimport OrderListItem from './OrderListItem';\nimport OrderListHeaders from './OrderListHeaders';\nimport gql from 'graphql-tag';\nimport Pagination from '../components/Pagination';\n\nvar OrderList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderList, _React$Component);\n\n  function OrderList() {\n    _classCallCheck(this, OrderList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderList).apply(this, arguments));\n  }\n\n  _createClass(OrderList, [{\n    key: \"render\",\n    value: function render() {\n      var orderPagination = this.props.orderPagination;\n\n      if (!orderPagination || orderPagination.items.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"empty order list\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        pageInfo: orderPagination.pageInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(OrderListHeaders, {\n        count: orderPagination.pageInfo.totalItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), orderPagination.items.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(OrderListItem, {\n          order: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return OrderList;\n}(React.Component);\n\nOrderList.fragment = gql(_templateObject(), OrderListItem.fragment, Pagination.fragment);\nexport default OrderList;","map":{"version":3,"sources":["/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/orders/OrderList.tsx"],"names":["React","OrderListItem","OrderListHeaders","gql","Pagination","OrderList","orderPagination","props","items","length","pageInfo","totalItems","map","item","_id","Component","fragment"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC,C,CACA;;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;;IAMMC,S;;;;;;;;;;;;;6BAeY;AAAA,UACNC,eADM,GACc,KAAKC,KADnB,CACND,eADM;;AAGd,UAAI,CAACA,eAAD,IAAoBA,eAAe,CAACE,KAAhB,CAAsBC,MAAtB,KAAiC,CAAzD,EAA4D;AAC1D,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAEH,eAAe,CAACI,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEJ,eAAe,CAACI,QAAhB,CAAyBC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAKGL,eAAe,CAACE,KAAhB,CAAsBI,GAAtB,CAA0B,UAAAC,IAAI,EAAI;AACjC,eACE;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AAAe,UAAA,KAAK,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANA,CALH,CADF;AAeD;;;;EArCqBb,KAAK,CAACe,S;;AAAxBV,S,CACUW,Q,GAAWb,G,oBAUrBF,aAAa,CAACe,Q,EACdZ,UAAU,CAACY,Q;AA4BjB,eAAeX,SAAf","sourcesContent":["import React, { Component } from 'react';\n// import { createPaginationContainer, graphql } from 'react-relay';\nimport { Well } from 'react-bootstrap';\nimport OrderListItem from './OrderListItem';\nimport OrderListHeaders from './OrderListHeaders';\nimport gql from 'graphql-tag';\nimport { OrderListFragment } from './__generated__/OrderListFragment';\nimport Pagination from '../components/Pagination';\n\ninterface Props {\n  orderPagination: OrderListFragment;\n}\n\nclass OrderList extends React.Component<Props> {\n  public static fragment = gql`\n    fragment OrderListFragment on OrderPagination {\n      items {\n        ...OrderListItemFragment\n      }\n      pageInfo {\n        totalItems\n        ...PaginationFragment\n      }\n    }\n    ${OrderListItem.fragment}\n    ${Pagination.fragment}\n  `;\n\n  public render() {\n    const { orderPagination } = this.props;\n\n    if (!orderPagination || orderPagination.items.length === 0) {\n      return <div>empty order list</div>;\n    }\n\n    return (\n      <div>\n        <Pagination pageInfo={orderPagination.pageInfo} />\n\n        <OrderListHeaders count={orderPagination.pageInfo.totalItems} />\n\n        {orderPagination.items.map(item => {\n          return (\n            <div key={item._id}>\n              <OrderListItem order={item} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}