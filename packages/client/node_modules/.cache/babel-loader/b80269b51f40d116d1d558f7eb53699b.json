{"ast":null,"code":"var _jsxFileName = \"/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/components/MyQuery.tsx\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nexport default function MyQuery(_ref) {\n  var Cmp = _ref.component,\n      query = _ref.query,\n      variables = _ref.variables,\n      _ref$fetchPolicy = _ref.fetchPolicy,\n      fetchPolicy = _ref$fetchPolicy === void 0 ? 'cache-first' : _ref$fetchPolicy;\n  return React.createElement(Query, {\n    fetchPolicy: fetchPolicy,\n    query: query,\n    variables: variables,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error,\n        data = _ref2.data;\n\n    if (loading) {\n      return \"Loading\";\n    }\n\n    if (error) {\n      return \"Error!: \".concat(error);\n    }\n\n    return React.createElement(Cmp, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  });\n}","map":{"version":3,"sources":["/Users/oleggamega/WebstormProjects/graphql-typescript-boilerplate/packages/client/src/components/MyQuery.tsx"],"names":["React","Query","MyQuery","Cmp","component","query","variables","fetchPolicy","loading","error","data"],"mappings":";AAAA,OAAOA,KAAP,MAAgE,OAAhE;AACA,SAASC,KAAT,QAAsB,cAAtB;AAWA,eAAe,SAASC,OAAT,OAKC;AAAA,MAJHC,GAIG,QAJdC,SAIc;AAAA,MAHdC,KAGc,QAHdA,KAGc;AAAA,MAFdC,SAEc,QAFdA,SAEc;AAAA,8BADdC,WACc;AAAA,MADdA,WACc,iCADA,aACA;AACd,SACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEA,WAApB;AAAiC,IAAA,KAAK,EAAEF,KAAxC;AAA+C,IAAA,SAAS,EAAEC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAA8B;AAAA,QAA3BE,OAA2B,SAA3BA,OAA2B;AAAA,QAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAC7B,QAAIF,OAAJ,EAAa;AACX;AACD;;AACD,QAAIC,KAAJ,EAAW;AACT,+BAAkBA,KAAlB;AACD;;AAED,WAAO,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAVH,CADF;AAcD","sourcesContent":["import React, { Component, ComponentType, ComponentClass } from 'react';\nimport { Query } from 'react-apollo';\nimport { DocumentNode } from 'graphql';\nimport { FetchPolicy } from 'apollo-client';\n\ninterface LoaderProps {\n  component: ComponentType<any>; // TODO: fix\n  query: DocumentNode;\n  variables?: {};\n  fetchPolicy?: FetchPolicy;\n}\n\nexport default function MyQuery({\n  component: Cmp,\n  query,\n  variables,\n  fetchPolicy = 'cache-first',\n}: LoaderProps) {\n  return (\n    <Query fetchPolicy={fetchPolicy} query={query} variables={variables}>\n      {({ loading, error, data }) => {\n        if (loading) {\n          return `Loading`;\n        }\n        if (error) {\n          return `Error!: ${error}`;\n        }\n\n        return <Cmp data={data} />;\n      }}\n    </Query>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}